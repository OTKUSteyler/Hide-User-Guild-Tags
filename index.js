(function(f,d,g,p,l,m){"use strict";const{View:h,Text:c,TextInput:G,TouchableOpacity:y,ScrollView:E,StyleSheet:R}=l.ReactNative;function S(){m.useProxy(p.storage);const e=p.storage;e.whitelist||(e.whitelist=[]);const[t,r]=l.React.useState(""),o=function(){const a=t.trim();a&&(e.whitelist.includes(a)||(e.whitelist.push(a),r("")))},u=function(a){e.whitelist=e.whitelist.filter(function(x){return x!==a})},i=R.create({container:{flex:1,padding:16,backgroundColor:"#1e1e1e"},section:{marginBottom:24},sectionTitle:{fontSize:14,fontWeight:"600",color:"#b9bbbe",marginBottom:8,textTransform:"uppercase"},card:{backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},input:{backgroundColor:"#202225",color:"#dcddde",borderRadius:4,padding:12,fontSize:16,marginBottom:8},button:{backgroundColor:"#5865f2",borderRadius:4,padding:12,alignItems:"center"},buttonDisabled:{backgroundColor:"#4e5058"},buttonText:{color:"#ffffff",fontSize:16,fontWeight:"600"},userRow:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},userId:{color:"#dcddde",fontSize:16,flex:1},removeButton:{backgroundColor:"#ed4245",borderRadius:4,padding:8,paddingHorizontal:12},removeButtonText:{color:"#ffffff",fontSize:14,fontWeight:"600"},emptyText:{color:"#72767d",fontSize:14,textAlign:"center",padding:16}});return l.React.createElement(E,{style:i.container},l.React.createElement(h,{style:i.section},l.React.createElement(c,{style:i.sectionTitle},"Add User to Whitelist"),l.React.createElement(h,{style:i.card},l.React.createElement(G,{style:i.input,value:t,onChangeText:r,placeholder:"Enter User ID",placeholderTextColor:"#72767d"}),l.React.createElement(y,{style:[i.button,!t.trim()&&i.buttonDisabled],onPress:o,disabled:!t.trim()},l.React.createElement(c,{style:i.buttonText},"Add User")))),l.React.createElement(h,{style:i.section},l.React.createElement(c,{style:i.sectionTitle},"Whitelisted Users (",e.whitelist.length,")"),e.whitelist.length===0?l.React.createElement(c,{style:i.emptyText},"No users whitelisted",`
`,"Guild tags hidden for all users"):e.whitelist.map(function(a){return l.React.createElement(h,{key:a,style:i.userRow},l.React.createElement(c,{style:i.userId},a),l.React.createElement(y,{style:i.removeButton,onPress:function(){return u(a)}},l.React.createElement(c,{style:i.removeButtonText},"Remove")))})))}const T=p.storage;T.whitelist??=[];const b=function(e){return e?!T.whitelist.includes(e):!0};let s=[];const n=function(e,t){if(!e||!b(t))return e;try{delete e.guildTag,delete e.guild_tag,delete e.tagText,delete e.tag_text,delete e.serverTag,delete e.server_tag,delete e.primaryGuild,delete e.primary_guild,e.guildMemberProfile&&(delete e.guildMemberProfile.guildTag,delete e.guildMemberProfile.tagText),e.guild_member_profile&&(delete e.guild_member_profile.guild_tag,delete e.guild_member_profile.tag_text),e.bio&&(e.bio=e.bio.replace(/[\u{1F300}-\u{1F9FF}]/gu,"").trim()),e.nick&&(e.nick=e.nick.replace(/[\u{1F300}-\u{1F9FF}]/gu,"").trim())}catch{}return e},P=function(){console.log("[HideGuildTags] \u{1F680} NUCLEAR MODE ACTIVATED");try{try{const e=l.FluxDispatcher.dispatch.bind(l.FluxDispatcher);l.FluxDispatcher.dispatch=function(t){return t&&(t.user&&n(t.user,t.user.id),t.users&&t.users.forEach(function(r){return n(r,r?.id)}),t.member&&n(t.member,t.member?.user?.id),t.members&&Object.values(t.members).forEach(function(r){return n(r,r?.user?.id)}),t.guildMember&&n(t.guildMember,t.guildMember?.user?.id)),e(t)},s.push(function(){l.FluxDispatcher.dispatch=e}),console.log("[HideGuildTags] \u2713 Patched FluxDispatcher")}catch(e){console.log("[HideGuildTags] FluxDispatcher patch failed:",e)}try{const e=g.findByStoreName("GuildMemberStore");e&&(e.getMember&&s.push(d.after("getMember",e,function(t,r){return n(r,t?.[1])})),e.getMembers&&s.push(d.after("getMembers",e,function(t,r){return Array.isArray(r)?r.forEach(function(o){return n(o,o?.userId||o?.user?.id)}):r&&typeof r=="object"&&Object.values(r).forEach(function(o){return n(o,o?.userId||o?.user?.id)}),r})),e.getAllGuildsAndMembers&&s.push(d.after("getAllGuildsAndMembers",e,function(t,r){return r&&typeof r=="object"&&Object.values(r).forEach(function(o){o&&typeof o=="object"&&Object.values(o).forEach(function(u){return n(u,u?.userId)})}),r})),console.log("[HideGuildTags] \u2713 Patched GuildMemberStore (all methods)"))}catch(e){console.log("[HideGuildTags] GuildMemberStore failed:",e)}try{const e=g.findByStoreName("UserStore");e?.getUser&&(s.push(d.after("getUser",e,function(t,r){return n(r,t?.[0])})),console.log("[HideGuildTags] \u2713 Patched UserStore"))}catch(e){console.log("[HideGuildTags] UserStore failed:",e)}try{const e=g.findByStoreName("UserProfileStore");e&&(["getUserProfile","getGuildMemberProfile","getMemberProfile"].forEach(function(t){e[t]&&s.push(d.after(t,e,function(r,o){return n(o,r?.[0]||r?.[1])}))}),console.log("[HideGuildTags] \u2713 Patched UserProfileStore"))}catch(e){console.log("[HideGuildTags] UserProfileStore failed:",e)}try{const e=g.findByProps("getMutualGuilds");e?.getMutualGuilds&&(s.push(d.after("getMutualGuilds",e,function(t,r){const o=t?.[0];return b(o)?[]:r})),console.log("[HideGuildTags] \u2713 Patched getMutualGuilds"))}catch(e){console.log("[HideGuildTags] getMutualGuilds failed:",e)}try{[["guildTag"],["renderGuildTag"],["useGuildTag"],["getGuildTag"],["getUserTag"]].forEach(function(e){try{const t=g.findByProps(...e);t&&Object.keys(t).forEach(function(r){if(typeof t[r]=="function"&&r.toLowerCase().includes("tag"))try{s.push(d.after(r,t,function(o,u){const i=o?.[0]?.userId||o?.[0]?.user?.id||o?.[0];return b(i)?null:u}))}catch{}})}catch{}}),console.log("[HideGuildTags] \u2713 Patched tag render functions")}catch(e){console.log("[HideGuildTags] Tag renders failed:",e)}try{const e=Object.defineProperty;Object.defineProperty=function(t,r,o){return(r==="guildTag"||r==="guild_tag"||r==="tagText"||r==="tag_text")&&t&&t.id&&b(t.id)&&(o.value=null),e(t,r,o)},s.push(function(){Object.defineProperty=e}),console.log("[HideGuildTags] \u2713 Patched Object.defineProperty")}catch(e){console.log("[HideGuildTags] defineProperty failed:",e)}try{const e=JSON.parse;JSON.parse=function(t,...r){const o=e(t,...r);return o&&typeof o=="object"&&(o.user&&n(o.user,o.user.id),o.users&&o.users.forEach(function(u){return n(u,u?.id)}),o.member&&n(o.member,o.member?.user?.id),o.members&&Object.values(o.members).forEach(function(u){return n(u,u?.user?.id)})),o},s.push(function(){JSON.parse=e}),console.log("[HideGuildTags] \u2713 Patched JSON.parse")}catch(e){console.log("[HideGuildTags] JSON.parse failed:",e)}console.log("=".repeat(50)),console.log(`[HideGuildTags] \u2705 LOADED - ${s.length} PATCHES ACTIVE`),console.log("[HideGuildTags] NOW:"),console.log("  1. CLOSE Discord completely (force close)"),console.log("  2. REOPEN Discord"),console.log("  3. Check DMs - tags SHOULD be gone"),console.log("=".repeat(50))}catch(e){console.error("[HideGuildTags] CRITICAL ERROR:",e)}},H=function(){console.log("[HideGuildTags] Unloading NUCLEAR patches..."),s.forEach(function(e,t){try{e()}catch(r){console.warn(`[HideGuildTags] Unpatch ${t} failed:`,r)}}),s=[],console.log("[HideGuildTags] \u2713 Unloaded")};return f.onLoad=P,f.onUnload=H,f.settings=S,f})({},vendetta.patcher,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.storage);
