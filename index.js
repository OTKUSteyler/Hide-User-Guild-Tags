(function(f,c,g,p,i,b){"use strict";const{View:h,Text:d,TextInput:G,TouchableOpacity:T,ScrollView:m,StyleSheet:R}=i.ReactNative;function w(){b.useProxy(p.storage);const e=p.storage;e.whitelist||(e.whitelist=[]);const[o,l]=i.React.useState(""),t=function(){const a=o.trim();a&&(e.whitelist.includes(a)||(e.whitelist.push(a),l("")))},n=function(a){e.whitelist=e.whitelist.filter(function(S){return S!==a})},r=R.create({container:{flex:1,padding:16,backgroundColor:"#1e1e1e"},section:{marginBottom:24},sectionTitle:{fontSize:14,fontWeight:"600",color:"#b9bbbe",marginBottom:8,textTransform:"uppercase"},card:{backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},input:{backgroundColor:"#202225",color:"#dcddde",borderRadius:4,padding:12,fontSize:16,marginBottom:8},button:{backgroundColor:"#5865f2",borderRadius:4,padding:12,alignItems:"center"},buttonDisabled:{backgroundColor:"#4e5058"},buttonText:{color:"#ffffff",fontSize:16,fontWeight:"600"},userRow:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},userId:{color:"#dcddde",fontSize:16,flex:1},removeButton:{backgroundColor:"#ed4245",borderRadius:4,padding:8,paddingHorizontal:12},removeButtonText:{color:"#ffffff",fontSize:14,fontWeight:"600"},emptyText:{color:"#72767d",fontSize:14,textAlign:"center",padding:16}});return i.React.createElement(m,{style:r.container},i.React.createElement(h,{style:r.section},i.React.createElement(d,{style:r.sectionTitle},"Add User to Whitelist"),i.React.createElement(h,{style:r.card},i.React.createElement(G,{style:r.input,value:o,onChangeText:l,placeholder:"Enter User ID",placeholderTextColor:"#72767d"}),i.React.createElement(T,{style:[r.button,!o.trim()&&r.buttonDisabled],onPress:t,disabled:!o.trim()},i.React.createElement(d,{style:r.buttonText},"Add User")))),i.React.createElement(h,{style:r.section},i.React.createElement(d,{style:r.sectionTitle},"Whitelisted Users (",e.whitelist.length,")"),e.whitelist.length===0?i.React.createElement(d,{style:r.emptyText},"No users whitelisted",`
`,"Guild tags hidden for all users"):e.whitelist.map(function(a){return i.React.createElement(h,{key:a,style:r.userRow},i.React.createElement(d,{style:r.userId},a),i.React.createElement(T,{style:r.removeButton,onPress:function(){return n(a)}},i.React.createElement(d,{style:r.removeButtonText},"Remove")))})))}const y=p.storage;y.whitelist||(y.whitelist=[]);const u=function(e){const o=y.whitelist??[];return e?!o.includes(e):!0};let s=[];const H=function(){console.log("[HideGuildTags] Loading for Revenge/Vendetta mobile...");try{try{const e=g.findByStoreName("GuildMemberStore");if(e){if(e.getMember){const o=c.after("getMember",e,function(l,t){try{const n=l?.[1];return t&&n&&u(n)&&t.nick&&(t.nick=t.nick.replace(/[\u{1F300}-\u{1F9FF}]/gu,"").trim()),t}catch{return t}});s.push(o),console.log("[HideGuildTags] \u2713 Patched GuildMemberStore.getMember")}if(e.getMembers){const o=c.after("getMembers",e,function(l,t){try{return Array.isArray(t)&&t.forEach(function(n){n&&n.userId&&u(n.userId)&&n.nick&&(n.nick=n.nick.replace(/[\u{1F300}-\u{1F9FF}]/gu,"").trim())}),t}catch{return t}});s.push(o),console.log("[HideGuildTags] \u2713 Patched GuildMemberStore.getMembers")}}}catch(e){console.log("[HideGuildTags] GuildMemberStore patch failed:",e)}try{const e=g.findByStoreName("UserProfileStore");e&&["getUserProfile","getGuildMemberProfile"].forEach(function(o){if(e[o]){const l=c.after(o,e,function(t,n){try{const r=typeof t[0]=="string"?t[0]:t[1];return n&&r&&u(r)&&(n.guildTag&&(n.guildTag=null),n.tagText&&(n.tagText=null)),n}catch{return n}});s.push(l),console.log(`[HideGuildTags] \u2713 Patched UserProfileStore.${o}`)}})}catch{console.log("[HideGuildTags] UserProfileStore patch failed")}try{const e=g.findByProps("guildTag","mutualGuilds");e&&(console.log("[HideGuildTags] Found guildTag module:",Object.keys(e)),Object.keys(e).forEach(function(o){if(typeof e[o]=="function"&&o.includes("Tag"))try{const l=c.after(o,e,function(t,n){try{const r=t?.[0]?.userId||t?.[0]?.user?.id||t?.[0];return r&&u(r)?null:n}catch{return n}});s.push(l),console.log(`[HideGuildTags] \u2713 Patched ${o}`)}catch{}}))}catch{console.log("[HideGuildTags] guildTag module patch failed")}try{["GuildTag","ServerTag","UserTag","MutualGuildTag"].forEach(function(e){try{const o=g.findByDisplayName(e);if(o&&o.prototype&&o.prototype.render){const l=c.after("render",o.prototype,function(t,n){try{const r=this.props?.userId||this.props?.user?.id;return r&&u(r)?null:n}catch{return n}});s.push(l),console.log(`[HideGuildTags] \u2713 Patched ${e} component`)}}catch{}})}catch{console.log("[HideGuildTags] Component patching failed")}try{const e=g.findByProps("UserRow","default");if(e?.UserRow){const o=c.after("UserRow",e,function(l,t){try{if(t?.props){const n=l?.[0]?.user?.id||l?.[0]?.userId;n&&u(n)&&(t.props.guildTag&&(t.props.guildTag=null),t.props.subText&&typeof t.props.subText=="string"&&(t.props.subText=t.props.subText.replace(/[\u{1F300}-\u{1F9FF}]/gu,"").trim()))}return t}catch{return t}});s.push(o),console.log("[HideGuildTags] \u2713 Patched UserRow")}}catch{console.log("[HideGuildTags] UserRow patch failed")}console.log("[HideGuildTags] \u2713 Plugin loaded successfully"),console.log(`[HideGuildTags] Applied ${s.length} patches`),s.length===0?(console.warn("[HideGuildTags] \u26A0 WARNING: No patches applied!"),console.warn("[HideGuildTags] Guild tags will still be visible."),console.warn("[HideGuildTags] Try running the debug version to find modules.")):console.log("[HideGuildTags] \u{1F389} Try opening DMs or member lists to see if tags are hidden!")}catch(e){console.error("[HideGuildTags] Critical load error:",e)}},E=function(){console.log("[HideGuildTags] Unloading...");try{s.forEach(function(e,o){try{typeof e=="function"&&e()}catch(l){console.warn(`[HideGuildTags] Failed to unpatch ${o}:`,l)}}),s=[],console.log("[HideGuildTags] \u2713 Unloaded cleanly")}catch(e){console.error("[HideGuildTags] Unload error:",e)}};return f.onLoad=H,f.onUnload=E,f.settings=w,f})({},vendetta.patcher,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.storage);
