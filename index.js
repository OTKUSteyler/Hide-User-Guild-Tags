(function(f,d,c,y,i,m){"use strict";const{View:h,Text:g,TextInput:E,TouchableOpacity:T,ScrollView:G,StyleSheet:R}=i.ReactNative;function S(){m.useProxy(y.storage);const e=y.storage;e.whitelist||(e.whitelist=[]);const[t,r]=i.React.useState(""),o=function(){const a=t.trim();a&&(e.whitelist.includes(a)||(e.whitelist.push(a),r("")))},u=function(a){e.whitelist=e.whitelist.filter(function(H){return H!==a})},l=R.create({container:{flex:1,padding:16,backgroundColor:"#1e1e1e"},section:{marginBottom:24},sectionTitle:{fontSize:14,fontWeight:"600",color:"#b9bbbe",marginBottom:8,textTransform:"uppercase"},card:{backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},input:{backgroundColor:"#202225",color:"#dcddde",borderRadius:4,padding:12,fontSize:16,marginBottom:8},button:{backgroundColor:"#5865f2",borderRadius:4,padding:12,alignItems:"center"},buttonDisabled:{backgroundColor:"#4e5058"},buttonText:{color:"#ffffff",fontSize:16,fontWeight:"600"},userRow:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},userId:{color:"#dcddde",fontSize:16,flex:1},removeButton:{backgroundColor:"#ed4245",borderRadius:4,padding:8,paddingHorizontal:12},removeButtonText:{color:"#ffffff",fontSize:14,fontWeight:"600"},emptyText:{color:"#72767d",fontSize:14,textAlign:"center",padding:16}});return i.React.createElement(G,{style:l.container},i.React.createElement(h,{style:l.section},i.React.createElement(g,{style:l.sectionTitle},"Add User to Whitelist"),i.React.createElement(h,{style:l.card},i.React.createElement(E,{style:l.input,value:t,onChangeText:r,placeholder:"Enter User ID",placeholderTextColor:"#72767d"}),i.React.createElement(T,{style:[l.button,!t.trim()&&l.buttonDisabled],onPress:o,disabled:!t.trim()},i.React.createElement(g,{style:l.buttonText},"Add User")))),i.React.createElement(h,{style:l.section},i.React.createElement(g,{style:l.sectionTitle},"Whitelisted Users (",e.whitelist.length,")"),e.whitelist.length===0?i.React.createElement(g,{style:l.emptyText},"No users whitelisted",`
`,"Guild tags hidden for all users"):e.whitelist.map(function(a){return i.React.createElement(h,{key:a,style:l.userRow},i.React.createElement(g,{style:l.userId},a),i.React.createElement(T,{style:l.removeButton,onPress:function(){return u(a)}},i.React.createElement(g,{style:l.removeButtonText},"Remove")))})))}const p=y.storage;p.whitelist??=[];const b=function(e){return e?!p.whitelist.includes(e):!0};let n=[];const s=function(e,t){if(!e||!b(t))return e;try{delete e.guildTag,delete e.guild_tag,delete e.tagText,delete e.tag_text,delete e.serverTag,delete e.server_tag,delete e.primaryGuild,delete e.primary_guild,e.guildMemberProfile&&(delete e.guildMemberProfile.guildTag,delete e.guildMemberProfile.tagText),e.guild_member_profile&&(delete e.guild_member_profile.guild_tag,delete e.guild_member_profile.tag_text)}catch{}return e},P=function(){console.log("[HideGuildTags] \u{1F680} Loading SAFE nuclear version...");try{try{const e=i.FluxDispatcher.dispatch.bind(i.FluxDispatcher);i.FluxDispatcher.dispatch=function(t){try{t&&(t.user&&s(t.user,t.user.id),t.users&&t.users.forEach(function(r){return s(r,r?.id)}),t.member&&s(t.member,t.member?.user?.id),t.members&&Object.values(t.members).forEach(function(r){return s(r,r?.user?.id)}),t.guildMember&&s(t.guildMember,t.guildMember?.user?.id))}catch{}return e(t)},n.push(function(){i.FluxDispatcher.dispatch=e}),console.log("[HideGuildTags] \u2713 Patched FluxDispatcher")}catch(e){console.log("[HideGuildTags] FluxDispatcher patch failed:",e)}try{const e=c.findByStoreName("GuildMemberStore");e&&(e.getMember&&n.push(d.after("getMember",e,function(t,r){return s(r,t?.[1])})),e.getMembers&&n.push(d.after("getMembers",e,function(t,r){try{Array.isArray(r)?r.forEach(function(o){return s(o,o?.userId||o?.user?.id)}):r&&typeof r=="object"&&Object.values(r).forEach(function(o){return s(o,o?.userId||o?.user?.id)})}catch{}return r})),console.log("[HideGuildTags] \u2713 Patched GuildMemberStore"))}catch(e){console.log("[HideGuildTags] GuildMemberStore failed:",e)}try{const e=c.findByStoreName("UserStore");e?.getUser&&(n.push(d.after("getUser",e,function(t,r){return s(r,t?.[0])})),console.log("[HideGuildTags] \u2713 Patched UserStore"))}catch(e){console.log("[HideGuildTags] UserStore failed:",e)}try{const e=c.findByStoreName("UserProfileStore");e&&(["getUserProfile","getGuildMemberProfile","getMemberProfile"].forEach(function(t){e[t]&&n.push(d.after(t,e,function(r,o){return s(o,r?.[0]||r?.[1])}))}),console.log("[HideGuildTags] \u2713 Patched UserProfileStore"))}catch(e){console.log("[HideGuildTags] UserProfileStore failed:",e)}try{const e=c.findByProps("getMutualGuilds");e?.getMutualGuilds&&(n.push(d.after("getMutualGuilds",e,function(t,r){const o=t?.[0];return b(o)?[]:r})),console.log("[HideGuildTags] \u2713 Patched getMutualGuilds"))}catch(e){console.log("[HideGuildTags] getMutualGuilds failed:",e)}try{[["guildTag"],["renderGuildTag"],["useGuildTag"],["getGuildTag"],["getUserTag"]].forEach(function(e){try{const t=c.findByProps(...e);t&&Object.keys(t).forEach(function(r){if(typeof t[r]=="function"&&r.toLowerCase().includes("tag"))try{n.push(d.after(r,t,function(o,u){const l=o?.[0]?.userId||o?.[0]?.user?.id||o?.[0];return b(l)?null:u}))}catch{}})}catch{}}),console.log("[HideGuildTags] \u2713 Patched tag functions")}catch(e){console.log("[HideGuildTags] Tag functions failed:",e)}try{const e=c.findByStoreName("RelationshipStore");e&&(["getRelationships","getFriendIDs","getNickname"].forEach(function(t){e[t]&&n.push(d.after(t,e,function(r,o){try{o&&typeof o=="object"&&Object.keys(o).forEach(function(u){b(u)&&s(o[u],u)})}catch{}return o}))}),console.log("[HideGuildTags] \u2713 Patched RelationshipStore"))}catch(e){console.log("[HideGuildTags] RelationshipStore failed:",e)}console.log("=".repeat(50)),console.log(`[HideGuildTags] \u2705 LOADED - ${n.length} PATCHES`),console.log("[HideGuildTags] NEXT STEPS:"),console.log("  1. FORCE CLOSE Discord (swipe from recents)"),console.log("  2. REOPEN Discord"),console.log("  3. Check if tags are hidden"),console.log("=".repeat(50))}catch(e){console.error("[HideGuildTags] CRITICAL ERROR:",e)}},x=function(){console.log("[HideGuildTags] Unloading..."),n.forEach(function(e){try{e()}catch{}}),n=[],console.log("[HideGuildTags] \u2713 Unloaded")};return f.onLoad=P,f.onUnload=x,f.settings=S,f})({},vendetta.patcher,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.storage);
