(function(f,d,c,T,i,y){"use strict";const{View:h,Text:u,TextInput:G,TouchableOpacity:p,ScrollView:m,StyleSheet:w}=i.ReactNative;function R(){y.useProxy(T.storage);const e=T.storage;e.whitelist||(e.whitelist=[]);const[o,t]=i.React.useState(""),l=function(){const n=o.trim();n&&(e.whitelist.includes(n)||(e.whitelist.push(n),t("")))},s=function(n){e.whitelist=e.whitelist.filter(function(H){return H!==n})},r=w.create({container:{flex:1,padding:16,backgroundColor:"#1e1e1e"},section:{marginBottom:24},sectionTitle:{fontSize:14,fontWeight:"600",color:"#b9bbbe",marginBottom:8,textTransform:"uppercase"},card:{backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},input:{backgroundColor:"#202225",color:"#dcddde",borderRadius:4,padding:12,fontSize:16,marginBottom:8},button:{backgroundColor:"#5865f2",borderRadius:4,padding:12,alignItems:"center"},buttonDisabled:{backgroundColor:"#4e5058"},buttonText:{color:"#ffffff",fontSize:16,fontWeight:"600"},userRow:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},userId:{color:"#dcddde",fontSize:16,flex:1},removeButton:{backgroundColor:"#ed4245",borderRadius:4,padding:8,paddingHorizontal:12},removeButtonText:{color:"#ffffff",fontSize:14,fontWeight:"600"},emptyText:{color:"#72767d",fontSize:14,textAlign:"center",padding:16}});return i.React.createElement(m,{style:r.container},i.React.createElement(h,{style:r.section},i.React.createElement(u,{style:r.sectionTitle},"Add User to Whitelist"),i.React.createElement(h,{style:r.card},i.React.createElement(G,{style:r.input,value:o,onChangeText:t,placeholder:"Enter User ID",placeholderTextColor:"#72767d"}),i.React.createElement(p,{style:[r.button,!o.trim()&&r.buttonDisabled],onPress:l,disabled:!o.trim()},i.React.createElement(u,{style:r.buttonText},"Add User")))),i.React.createElement(h,{style:r.section},i.React.createElement(u,{style:r.sectionTitle},"Whitelisted Users (",e.whitelist.length,")"),e.whitelist.length===0?i.React.createElement(u,{style:r.emptyText},"No users whitelisted",`
`,"Guild tags hidden for all users"):e.whitelist.map(function(n){return i.React.createElement(h,{key:n,style:r.userRow},i.React.createElement(u,{style:r.userId},n),i.React.createElement(p,{style:r.removeButton,onPress:function(){return s(n)}},i.React.createElement(u,{style:r.removeButtonText},"Remove")))})))}const b=T.storage;b.whitelist||(b.whitelist=[]);const g=function(e){const o=b.whitelist??[];return e?!o.includes(e):!0};let a=[];const P=function(){console.log("[HideGuildTags] Loading for Revenge/Vendetta mobile...");try{try{const e=c.findByStoreName("GuildMemberStore");e?.getMember&&(a.push(d.before("getMember",e,function(o){const t=o?.[1];t&&g(t)&&(o._hideTag=!0)})),a.push(d.after("getMember",e,function(o,t){return o._hideTag&&t&&(delete t.guildTag,delete t.guild_tag,delete t.tagText,delete t.tag_text,t.bio&&(t.bio=t.bio.replace(/[\u{1F300}-\u{1F9FF}]/gu,"")),t.nick&&(t.nick=t.nick.replace(/[\u{1F300}-\u{1F9FF}]/gu,""))),t})),console.log("[HideGuildTags] \u2713 Patched GuildMemberStore.getMember (before + after)"))}catch(e){console.error("[HideGuildTags] GuildMemberStore.getMember failed:",e)}try{const e=c.findByStoreName("UserStore");e?.getUser&&(a.push(d.after("getUser",e,function(o,t){return t&&o?.[0]&&g(o[0])&&t.guildMemberProfile&&(delete t.guildMemberProfile.guildTag,delete t.guildMemberProfile.tagText),t})),console.log("[HideGuildTags] \u2713 Patched UserStore.getUser"))}catch(e){console.error("[HideGuildTags] UserStore patch failed:",e)}try{const e=c.findByStoreName("UserProfileStore");e&&["getUserProfile","getGuildMemberProfile","getMemberProfile"].forEach(function(o){e[o]&&(a.push(d.after(o,e,function(t,l){if(l){const s=t?.[0]||t?.[1];s&&g(s)&&(delete l.guildTag,delete l.guild_tag,delete l.tagText,delete l.tag_text)}return l})),console.log(`[HideGuildTags] \u2713 Patched UserProfileStore.${o}`))})}catch(e){console.error("[HideGuildTags] UserProfileStore patch failed:",e)}try{const e=c.findByProps("getMutualGuilds");e?.getMutualGuilds&&(a.push(d.after("getMutualGuilds",e,function(o,t){const l=o?.[0];return l&&g(l)?[]:t})),console.log("[HideGuildTags] \u2713 Patched getMutualGuilds"))}catch(e){console.error("[HideGuildTags] getMutualGuilds patch failed:",e)}try{[{props:["guildTag"],name:"guildTag module"},{props:["renderGuildTag"],name:"renderGuildTag module"},{props:["useGuildTag"],name:"useGuildTag hook"},{props:["getGuildTag"],name:"getGuildTag module"}].forEach(function({props:e,name:o}){try{const t=c.findByProps(...e);t&&Object.keys(t).forEach(function(l){if(typeof t[l]=="function"&&l.toLowerCase().includes("tag"))try{a.push(d.after(l,t,function(s,r){const n=s?.[0]?.userId||s?.[0]?.user?.id||s?.[0];return n&&g(n)?null:r})),console.log(`[HideGuildTags] \u2713 Patched ${o}.${l}`)}catch{}})}catch{}})}catch(e){console.error("[HideGuildTags] Additional module patching failed:",e)}try{const e=c.findByProps("getUserTag","getGuildMemberTag");e&&Object.keys(e).forEach(function(o){if(typeof e[o]=="function"&&o.toLowerCase().includes("tag"))try{a.push(d.after(o,e,function(t,l){const s=t?.[0]||t?.[1];return s&&g(s)?null:l})),console.log(`[HideGuildTags] \u2713 Patched ${o}`)}catch{}})}catch{}console.log("[HideGuildTags] \u2713 Plugin loaded successfully"),console.log(`[HideGuildTags] Applied ${a.length} patches`),a.length>0?(console.log("[HideGuildTags] \u{1F389} Patches applied! Try:"),console.log("  1. Close and reopen DMs"),console.log("  2. Switch between servers"),console.log("  3. Refresh member lists")):console.warn("[HideGuildTags] \u26A0 No patches applied - tags will still show")}catch(e){console.error("[HideGuildTags] Critical error:",e)}},S=function(){console.log("[HideGuildTags] Unloading...");try{a.forEach(function(e,o){try{e()}catch(t){console.warn(`[HideGuildTags] Failed to unpatch ${o}:`,t)}}),a=[],console.log("[HideGuildTags] \u2713 Unloaded cleanly")}catch(e){console.error("[HideGuildTags] Unload error:",e)}};return f.onLoad=P,f.onUnload=S,f.settings=R,f})({},vendetta.patcher,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.storage);
