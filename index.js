(function(d,h,T,g,t,b){"use strict";const{View:c,Text:s,TextInput:R,TouchableOpacity:p,ScrollView:w,StyleSheet:G}=t.ReactNative;function m(){b.useProxy(g.storage);const e=g.storage;e.whitelist||(e.whitelist=[]);const[n,a]=t.React.useState(""),i=function(){const l=n.trim();l&&(e.whitelist.includes(l)||(e.whitelist.push(l),a("")))},r=function(l){e.whitelist=e.whitelist.filter(function(U){return U!==l})},o=G.create({container:{flex:1,padding:16,backgroundColor:"#1e1e1e"},section:{marginBottom:24},sectionTitle:{fontSize:14,fontWeight:"600",color:"#b9bbbe",marginBottom:8,textTransform:"uppercase"},card:{backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},input:{backgroundColor:"#202225",color:"#dcddde",borderRadius:4,padding:12,fontSize:16,marginBottom:8},button:{backgroundColor:"#5865f2",borderRadius:4,padding:12,alignItems:"center"},buttonDisabled:{backgroundColor:"#4e5058"},buttonText:{color:"#ffffff",fontSize:16,fontWeight:"600"},userRow:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",backgroundColor:"#2f3136",borderRadius:8,padding:12,marginBottom:8},userId:{color:"#dcddde",fontSize:16,flex:1},removeButton:{backgroundColor:"#ed4245",borderRadius:4,padding:8,paddingHorizontal:12},removeButtonText:{color:"#ffffff",fontSize:14,fontWeight:"600"},emptyText:{color:"#72767d",fontSize:14,textAlign:"center",padding:16}});return t.React.createElement(w,{style:o.container},t.React.createElement(c,{style:o.section},t.React.createElement(s,{style:o.sectionTitle},"Add User to Whitelist"),t.React.createElement(c,{style:o.card},t.React.createElement(R,{style:o.input,value:n,onChangeText:a,placeholder:"Enter User ID",placeholderTextColor:"#72767d"}),t.React.createElement(p,{style:[o.button,!n.trim()&&o.buttonDisabled],onPress:i,disabled:!n.trim()},t.React.createElement(s,{style:o.buttonText},"Add User")))),t.React.createElement(c,{style:o.section},t.React.createElement(s,{style:o.sectionTitle},"Whitelisted Users (",e.whitelist.length,")"),e.whitelist.length===0?t.React.createElement(s,{style:o.emptyText},"No users whitelisted",`
`,"Guild tags hidden for all users"):e.whitelist.map(function(l){return t.React.createElement(c,{key:l,style:o.userRow},t.React.createElement(s,{style:o.userId},l),t.React.createElement(p,{style:o.removeButton,onPress:function(){return r(l)}},t.React.createElement(s,{style:o.removeButtonText},"Remove")))})))}const f=g.storage;f.whitelist||(f.whitelist=[]);const y=function(e){const n=f.whitelist??[];return e?!n.includes(e):!0};let u=[];const E=function(){console.log("[HideGuildTags] Starting plugin...");try{try{const e=T.findByProps("GuildTag");if(e?.GuildTag){const n=h.after("GuildTag",e,function(a,i){try{const r=a?.[0]?.user;return r&&y(r.id)?null:i}catch(r){return console.error("[HideGuildTags] GuildTag patch error:",r),i}});u.push(n),console.log("[HideGuildTags] \u2713 Patched GuildTag")}else console.warn("[HideGuildTags] \u26A0 GuildTag module not found")}catch(e){console.error("[HideGuildTags] Failed to patch GuildTag:",e)}try{const e=T.findByProps("Username");if(e?.Username){const n=h.after("Username",e,function(a,i){try{const r=a?.[0]?.user;return i?.props?.guildTag&&r&&y(r.id)&&(i.props.guildTag=null),i}catch(r){return console.error("[HideGuildTags] Username patch error:",r),i}});u.push(n),console.log("[HideGuildTags] \u2713 Patched Username")}else console.warn("[HideGuildTags] \u26A0 Username module not found")}catch(e){console.error("[HideGuildTags] Failed to patch Username:",e)}console.log("[HideGuildTags] \u2713 Plugin loaded successfully")}catch(e){throw console.error("[HideGuildTags] Critical load error:",e),e}},H=function(){console.log("[HideGuildTags] Unloading plugin...");try{u.forEach(function(e,n){try{typeof e=="function"&&e()}catch(a){console.warn(`[HideGuildTags] Failed to unpatch ${n}:`,a)}}),u=[],console.log("[HideGuildTags] \u2713 Plugin unloaded cleanly")}catch(e){console.error("[HideGuildTags] Unload error:",e)}};return d.onLoad=E,d.onUnload=H,d.settings=m,d})({},vendetta.patcher,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.storage);
